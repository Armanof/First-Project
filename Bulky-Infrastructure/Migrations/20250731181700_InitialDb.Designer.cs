// <auto-generated />
using System;
using Bulky_Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bulky_Infrastructure.Migrations
{
    [DbContext(typeof(BulkyContext))]
    [Migration("20250731181700_InitialDb")]
    partial class InitialDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bulky_Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("InsertedIP")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<Guid?>("InsertedUserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIP")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<Guid?>("UpdatedUserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("33224a6d-aefe-442e-8afd-00335258c001"),
                            DisplayOrder = 0,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = new Guid("7a687151-1b28-4217-b1dd-89bac7f8be86"),
                            DisplayOrder = 0,
                            Name = "Sci-Fi"
                        },
                        new
                        {
                            Id = new Guid("86e47e6e-03db-4e6a-bea3-a17cc6fa3408"),
                            DisplayOrder = 0,
                            Name = "Romance"
                        });
                });

            modelBuilder.Entity("Bulky_Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid?>("F_CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("InsertedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("InsertedIP")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<Guid?>("InsertedUserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIP")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<Guid?>("UpdatedUserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("F_CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e82a1c1b-0f1c-4222-94fb-50f1b5b46e12"),
                            Author = "John Doe",
                            Description = "Advanced C# techniques",
                            ISBN = "978-1234567890",
                            ListPrice = 59.990000000000002,
                            Price = 49.990000000000002,
                            Price100 = 39.990000000000002,
                            Price50 = 45.990000000000002,
                            Title = "C# Programming"
                        },
                        new
                        {
                            Id = new Guid("4c53d0b3-09a9-42c4-a569-74bdcf7d7640"),
                            Author = "Jane Smith",
                            Description = "Building scalable web applications",
                            ISBN = "978-0987654321",
                            ListPrice = 79.989999999999995,
                            Price = 69.989999999999995,
                            Price100 = 59.990000000000002,
                            Price50 = 65.989999999999995,
                            Title = "ASP.NET Core Guide"
                        },
                        new
                        {
                            Id = new Guid("e57d5e7f-0148-4f10-81e2-8051faebffa8"),
                            Author = "Michael Chen",
                            Description = "Modern distributed system design",
                            ISBN = "978-5678901234",
                            ListPrice = 89.989999999999995,
                            Price = 79.989999999999995,
                            Price100 = 69.989999999999995,
                            Price50 = 74.989999999999995,
                            Title = "Introduction to Microservices"
                        },
                        new
                        {
                            Id = new Guid("3bd11b1f-d805-4564-961a-f5a69ebb490b"),
                            Author = "Robert Martin",
                            Description = "Principles of software craftsmanship",
                            ISBN = "978-3216549870",
                            ListPrice = 49.990000000000002,
                            Price = 42.990000000000002,
                            Price100 = 34.990000000000002,
                            Price50 = 39.990000000000002,
                            Title = "Clean Code"
                        },
                        new
                        {
                            Id = new Guid("b824129f-3925-4de0-a014-9ea5535591d8"),
                            Author = "Sarah Lee",
                            Description = "Hands-on ML algorithms and data science",
                            ISBN = "978-6789012345",
                            ListPrice = 99.989999999999995,
                            Price = 89.989999999999995,
                            Price100 = 79.989999999999995,
                            Price50 = 85.989999999999995,
                            Title = "Machine Learning with Python"
                        });
                });

            modelBuilder.Entity("Bulky_Models.Product", b =>
                {
                    b.HasOne("Bulky_Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("F_CategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Bulky_Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
